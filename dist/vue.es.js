import{stringify as t,parse as r}from"qs";function i(){return(i=Object.assign||function(t){for(var r=1;r<arguments.length;r++){var i=arguments[r];for(var e in i)Object.prototype.hasOwnProperty.call(i,e)&&(t[e]=i[e])}return t}).apply(this,arguments)}class e{constructor(t,r,i){var e;this.name=t,this.definition=r,this.bindings=null!=(e=r.bindings)?e:{},this.config=i}get template(){return`${this.config.absolute?this.definition.domain?`${this.config.url.match(/^\w+:\/\//)[0]}${this.definition.domain}${this.config.port?":"+this.config.port:""}`:this.config.url:""}/${this.definition.uri}`.replace(/\/+$/,"")}get parameterSegments(){var t,r;return null!=(t=null===(r=this.template.match(/{[^}?]+\??}/g))||void 0===r?void 0:r.map(t=>({name:t.replace(/{|\??}/g,""),required:!/\?}$/.test(t)})))?t:[]}matchesUrl(t){if(!this.definition.methods.includes("GET"))return!1;const r=this.template.replace(/\/{[^}?]*\?}/g,"(/[^/?]+)?").replace(/{[^}]+}/g,"[^/?]+").replace(/^\w+:\/\//,"");return new RegExp(`^${r}$`).test(t.replace(/\/+$/,"").split("?").shift())}compile(t){return this.parameterSegments.length?this.template.replace(/{([^}?]+)\??}/g,(r,i)=>{var e;if([null,void 0].includes(t[i])&&this.parameterSegments.find(({name:t})=>t===i).required)throw new Error(`Ziggy error: '${i}' parameter is required for route '${this.name}'.`);return encodeURIComponent(null!=(e=t[i])?e:"")}).replace(/\/+$/,""):this.template}}class s extends String{constructor(t,r,s=!0,n){var o;if(super(),this.t=null!=(o=null!=n?n:Ziggy)?o:null===globalThis||void 0===globalThis?void 0:globalThis.Ziggy,this.t=i({},this.t,{absolute:s}),t){if(!this.t.routes[t])throw new Error(`Ziggy error: route '${t}' is not in the route list.`);this.i=new e(t,this.t.routes[t],this.t),this.s=this.o(r)}}toString(){const r=Object.keys(this.s).filter(t=>!this.i.parameterSegments.some(({name:r})=>r===t)).filter(t=>"_query"!==t).reduce((t,r)=>i({},t,{[r]:this.s[r]}),{});return this.i.compile(this.s)+t(i({},r,this.s._query),{addQueryPrefix:!0,arrayFormat:"indices",encodeValuesOnly:!0,skipNulls:!0,encoder:(t,r)=>"boolean"==typeof t?Number(t):r(t)})}current(t,r){const i=this.t.absolute?window.location.host+window.location.pathname:window.location.pathname.replace(this.t.url.replace(/^\w*:\/\/[^/]+/,""),"").replace(/^\/+/,"/"),[s,n]=Object.entries(this.t.routes).find(([r,s])=>new e(t,s,this.t).matchesUrl(i))||[void 0,void 0];if(!t)return s;const o=new RegExp(`^${t.replace(".","\\.").replace("*",".*")}$`).test(s);if([null,void 0].includes(r)||!o)return o;const h=new e(s,n,this.t);r=this.o(r,h);const u=this.h(n);return!(!Object.values(r).every(t=>!t)||Object.values(u).length)||Object.entries(r).every(([t,r])=>u[t]==r)}get params(){return this.h(this.t.routes[this.current()])}has(t){return Object.keys(this.t.routes).includes(t)}o(t={},r=this.i){t=["string","number"].includes(typeof t)?[t]:t;const e=r.parameterSegments.filter(({name:t})=>!this.t.defaults[t]);return Array.isArray(t)?t=t.reduce((t,r,s)=>i({},t,e[s]?{[e[s].name]:r}:{[r]:""}),{}):1!==e.length||t[e[0].name]||!t.hasOwnProperty(Object.values(r.bindings)[0])&&!t.hasOwnProperty("id")||(t={[e[0].name]:t}),i({},this.u(r),this.l(t,r.bindings))}u(t){return t.parameterSegments.filter(({name:t})=>this.t.defaults[t]).reduce((t,{name:r},e)=>i({},t,{[r]:this.t.defaults[r]}),{})}l(t,r={}){return Object.entries(t).reduce((t,[e,s])=>{if(!s||"object"!=typeof s||Array.isArray(s)||"_query"===e)return i({},t,{[e]:s});if(!s.hasOwnProperty(r[e])){if(!s.hasOwnProperty("id"))throw new Error(`Ziggy error: object passed as '${e}' parameter is missing route model binding key '${r[e]}'.`);r[e]="id"}return i({},t,{[e]:s[r[e]]})},{})}h(t){var e;let s=window.location.pathname.replace(this.t.url.replace(/^\w*:\/\/[^/]+/,""),"").replace(/^\/+/,"");const n=(t,r="",e)=>{const[s,n]=[t,r].map(t=>t.split(e));return n.reduce((t,r,e)=>/^{[^}?]+\??}$/.test(r)&&s[e]?i({},t,{[r.replace(/^{|\??}$/g,"")]:s[e]}):t,{})};return i({},n(window.location.host,t.domain,"."),n(s,t.uri,"/"),r(null===(e=window.location.search)||void 0===e?void 0:e.replace(/^\?/,"")))}valueOf(){return this.toString()}check(t){return this.has(t)}}const n={install:(t,r)=>t.mixin({methods:{route:(t,i,e,n=r)=>function(t,r,i,e){const n=new s(t,r,i,e);return t?n.toString():n}(t,i,e,n)}})};export{n as ZiggyVue};
