{"version":3,"file":"route.m.js","sources":["../src/js/UrlBuilder.js","../src/js/route.js"],"sourcesContent":["class UrlBuilder {\n    constructor(name, absolute, ziggyObject) {\n\n        this.name = name;\n        this.ziggy = ziggyObject;\n        this.route = this.ziggy.namedRoutes[this.name];\n\n        if (typeof this.name === 'undefined') {\n            throw new Error('Ziggy Error: You must provide a route name');\n        } else if (typeof this.route === 'undefined') {\n            throw new Error(`Ziggy Error: route '${this.name}' is not found in the route list`);\n        }\n\n        this.absolute = typeof absolute === 'undefined' ? true : absolute;\n        this.domain = this.setDomain();\n        this.path = this.route.uri.replace(/^\\//, '');\n    }\n\n    setDomain() {\n        if (!this.absolute)\n            return '/';\n\n        if (!this.route.domain)\n            return this.ziggy.baseUrl.replace(/\\/?$/, '/');\n\n        let host = (this.route.domain || this.ziggy.baseDomain).replace(/\\/+$/, '');\n\n        if (this.ziggy.basePort) {\n            host = `${host}:${this.ziggy.basePort}`;\n        }\n\n        return this.ziggy.baseProtocol + '://' + host + '/';\n    }\n\n    construct() {\n        return this.domain + this.path\n    }\n}\n\nexport default UrlBuilder;\n","import UrlBuilder from './UrlBuilder';\nimport { stringify } from 'qs';\n\nclass Router extends String {\n    constructor(name, params, absolute, customZiggy = null) {\n        super();\n\n        this.name = name;\n        this.absolute = absolute;\n        this.ziggy = customZiggy ? customZiggy : Ziggy;\n        this.urlBuilder = this.name ? new UrlBuilder(name, absolute, this.ziggy) : null;\n        this.template = this.urlBuilder ? this.urlBuilder.construct() : '';\n        this.urlParams = this.normalizeParams(params);\n        this.queryParams = {};\n        this.hydrated = '';\n    }\n\n    normalizeParams(params) {\n        if (typeof params === 'undefined') return {};\n\n        // If you passed in a string or integer, wrap it in an array\n        params = typeof params !== 'object' ? [params] : params;\n\n        this.numericParamIndices = Array.isArray(params);\n        return Object.assign({}, params);\n    }\n\n    with(params) {\n        this.urlParams = this.normalizeParams(params);\n        return this;\n    }\n\n    withQuery(params) {\n        Object.assign(this.queryParams, params);\n        return this;\n    }\n\n    hydrateUrl() {\n        if (this.hydrated) return this.hydrated;\n\n        let hydrated = this.template.replace(\n            /{([^}]+)}/gi,\n            (tag, i) => {\n                let keyName = this.trimParam(tag),\n                    defaultParameter,\n                    tagValue;\n\n                if (this.ziggy.defaultParameters.hasOwnProperty(keyName)) {\n                    defaultParameter = this.ziggy.defaultParameters[keyName];\n                }\n\n                // If a default parameter exists, and a value wasn't\n                // provided for it manually, use the default value\n                if (defaultParameter && !this.urlParams[keyName]) {\n                    delete this.urlParams[keyName];\n                    return defaultParameter;\n                }\n\n                // We were passed an array, shift the value off the\n                // object and return that value to the route\n                if (this.numericParamIndices) {\n                    this.urlParams = Object.values(this.urlParams);\n\n                    tagValue = this.urlParams.shift();\n                } else {\n                    tagValue = this.urlParams[keyName];\n                    delete this.urlParams[keyName];\n                }\n\n                // The block above is what requires us to assign tagValue below\n                // instead of returning - if multiple *objects* are passed as\n                // params, numericParamIndices will be true and each object will\n                // be assigned above, which means !tagValue will evaluate to\n                // false, skipping the block below.\n\n                // If a value wasn't provided for this named parameter explicitly,\n                // but the object that was passed contains an ID, that object\n                // was probably a model, so we use the ID.\n\n                let bindingKey = this.ziggy.namedRoutes[this.name]?.bindings?.[keyName];\n\n                if (bindingKey && !this.urlParams[keyName] && this.urlParams[bindingKey]) {\n                    tagValue = this.urlParams[bindingKey];\n                    delete this.urlParams[bindingKey];\n                } else if (!tagValue && !this.urlParams[keyName] && this.urlParams['id']) {\n                    tagValue = this.urlParams['id']\n                    delete this.urlParams['id'];\n                }\n\n                // The value is null or undefined; is this param\n                // optional or not\n                if (tagValue == null) {\n                    if (tag.indexOf('?') === -1) {\n                        throw new Error(\n                            \"Ziggy Error: '\" +\n                                keyName +\n                                \"' key is required for route '\" +\n                                this.name +\n                                \"'\"\n                        );\n                    } else {\n                        return '';\n                    }\n                }\n\n                // If an object was passed and has an id, return it\n                if (tagValue.id) {\n                    return encodeURIComponent(tagValue.id);\n                } else if (tagValue[bindingKey]) {\n                    return encodeURIComponent(tagValue[bindingKey])\n                }\n\n                return encodeURIComponent(tagValue);\n            }\n        );\n\n        if (this.urlBuilder != null && this.urlBuilder.path !== '') {\n          hydrated = hydrated.replace(/\\/+$/, '');\n        }\n\n        this.hydrated = hydrated;\n\n        return this.hydrated;\n    }\n\n    matchUrl() {\n        let windowUrl =\n            window.location.hostname +\n            (window.location.port ? ':' + window.location.port : '') +\n            window.location.pathname;\n\n        // Strip out optional parameters\n        let optionalTemplate = this.template\n            .replace(/(\\/\\{[^\\}]*\\?\\})/g, '/')\n            .replace(/(\\{[^\\}]*\\})/gi, '[^/?]+')\n            .replace(/\\/?$/, '')\n            .split('://')[1];\n\n        let searchTemplate = this.template\n            .replace(/(\\{[^\\}]*\\})/gi, '[^/?]+')\n            .split('://')[1];\n        let urlWithTrailingSlash = windowUrl.replace(/\\/?$/, '/');\n\n        const regularSearch = new RegExp('^' + searchTemplate + '/$').test(\n            urlWithTrailingSlash\n        );\n        const optionalSearch = new RegExp('^' + optionalTemplate + '/$').test(\n            urlWithTrailingSlash\n        );\n\n        return regularSearch || optionalSearch;\n    }\n\n    constructQuery() {\n        if (\n            Object.keys(this.queryParams).length === 0 &&\n            Object.keys(this.urlParams).length === 0\n        ) {\n            return '';\n        }\n\n        let remainingParams = Object.assign(this.urlParams, this.queryParams);\n\n        return stringify(remainingParams, {\n            encodeValuesOnly: true,\n            skipNulls: true,\n            addQueryPrefix: true,\n            arrayFormat: 'indices'\n        });\n    }\n\n    current(name = null) {\n        let routeNames = Object.keys(this.ziggy.namedRoutes);\n\n        let currentRoute = routeNames.filter(name => {\n            if (this.ziggy.namedRoutes[name].methods.indexOf('GET') === -1) {\n                return false;\n            }\n\n            return new Router(\n                name,\n                undefined,\n                undefined,\n                this.ziggy\n            ).matchUrl();\n        })[0];\n\n        if (name) {\n            const pattern = new RegExp(\n                '^' + name.replace('.', '\\\\.').replace('*', '.*') + '$',\n                'i'\n            );\n            return pattern.test(currentRoute);\n        }\n\n        return currentRoute;\n    }\n\n    check(name) {\n        let routeNames = Object.keys(this.ziggy.namedRoutes);\n\n        return routeNames.includes(name);\n    }\n\n    extractParams(uri, template, delimiter) {\n        const uriParts = uri.split(delimiter);\n        const templateParts = template.split(delimiter);\n\n        return templateParts.reduce(\n            (params, param, i) =>\n                param.indexOf('{') === 0 &&\n                param.indexOf('}') !== -1 &&\n                uriParts[i]\n                    ? Object.assign(params, {\n                          [this.trimParam(param)]: uriParts[i]\n                      })\n                    : params,\n            {}\n        );\n    }\n\n    get params() {\n        const namedRoute = this.ziggy.namedRoutes[this.current()];\n\n        let pathname = window.location.pathname\n            .replace(this.ziggy.baseUrl.split('://')[1].split('/')[1], '')\n            .replace(/^\\/+/, '');\n\n        return Object.assign(\n            this.extractParams(\n                window.location.hostname,\n                namedRoute.domain || '',\n                '.'\n            ),\n            this.extractParams(\n                pathname,\n                namedRoute.uri,\n                '/'\n            )\n        );\n    }\n\n    parse() {\n        this.return = this.hydrateUrl() + this.constructQuery();\n    }\n\n    url() {\n        this.parse();\n        return this.return;\n    }\n\n    toString() {\n        return this.url();\n    }\n\n    trimParam(param) {\n        return param.replace(/{|}|\\?/g, '');\n    }\n\n    valueOf() {\n        return this.url();\n    }\n}\n\nexport default function route(name, params, absolute, customZiggy) {\n    return new Router(name, params, absolute, customZiggy);\n}\n"],"names":["UrlBuilder","constructor","name","absolute","ziggyObject","this","ziggy","route","namedRoutes","Error","domain","setDomain","path","uri","replace","baseUrl","host","baseDomain","basePort","baseProtocol","construct","Router","String","params","customZiggy","super","Ziggy","urlBuilder","template","urlParams","normalizeParams","queryParams","hydrated","numericParamIndices","Array","isArray","Object","assign","with","withQuery","hydrateUrl","tag","i","defaultParameter","tagValue","keyName","trimParam","defaultParameters","hasOwnProperty","values","shift","bindingKey","_this$ziggy$namedRout","bindings","_this$ziggy$namedRout2","indexOf","id","encodeURIComponent","matchUrl","windowUrl","window","location","hostname","port","pathname","optionalTemplate","split","searchTemplate","urlWithTrailingSlash","regularSearch","RegExp","test","optionalSearch","constructQuery","keys","length","remainingParams","stringify","encodeValuesOnly","skipNulls","addQueryPrefix","arrayFormat","current","currentRoute","filter","methods","undefined","check","includes","extractParams","delimiter","uriParts","reduce","param","[object Object]","namedRoute","parse","return","url","toString","valueOf"],"mappings":"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"}