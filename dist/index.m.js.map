{"version":3,"file":"index.m.js","sources":["../node_modules/qs/lib/utils.js","../node_modules/qs/lib/formats.js","../node_modules/qs/lib/stringify.js","../node_modules/qs/lib/parse.js","../src/js/Route.js","../src/js/Router.js","../src/js/index.js"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar util = require('./utils');\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = util.assign(\n    {\n        'default': Format.RFC3986,\n        formatters: {\n            RFC1738: function (value) {\n                return replace.call(value, percentTwenties, '+');\n            },\n            RFC3986: function (value) {\n                return String(value);\n            }\n        }\n    },\n    Format\n);\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        }).join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key') : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key');\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value'))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj; // eslint-disable-line no-param-reassign\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","/**\n * A Laravel route. This class represents one route and its configuration and metadata.\n */\nexport default class Route {\n    /**\n     * @param {String} name - Route name.\n     * @param {Object} definition - Route definition.\n     * @param {Object} config - Ziggy configuration.\n     */\n    constructor(name, definition, config) {\n        this.name = name;\n        this.definition = definition;\n        this.bindings = definition.bindings ?? {};\n        this.config = { absolute: true, ...config };\n    }\n\n    /**\n     * Get a 'template' of the complete URL for this route.\n     *\n     * @example\n     * https://{team}.ziggy.dev/user/{user}\n     *\n     * @return {String} Route template.\n     */\n    get template() {\n        // If  we're building just a path there's no origin, otherwise: if this route has a\n        // domain configured we construct the origin with that, if not we use the app URL\n        const origin = !this.config.absolute ? '' : this.definition.domain\n            ? `${this.config.url.match(/^\\w+:\\/\\//)[0]}${this.definition.domain}${this.config.port ? `:${this.config.port}` : ''}`\n            : this.config.url;\n\n        return `${origin}/${this.definition.uri}`;\n    }\n\n    /**\n     * Get an array of objects representing the parameters that this route accepts.\n     *\n     * @example\n     * [{ name: 'team', required: true }, { name: 'user', required: false }]\n     *\n     * @return {Array} Parameter segments.\n     */\n    get parameterSegments() {\n        return this.template.match(/{[^}?]+\\??}/g)?.map((segment) => ({\n            name: segment.replace(/{|\\??}/g, ''),\n            required: !/\\?}$/.test(segment),\n        })) ?? [];\n    }\n\n    /**\n     * Get whether this route's template matches the given URL.\n     *\n     * @param {String} url - URL to check.\n     * @return {Boolean} Whether this route matches.\n     */\n    matchesUrl(url) {\n        if (!this.definition.methods.includes('GET')) return false;\n\n        // Transform the route's template into a regex that will match a hydrated URL,\n        // by replacing its parameter segments with matchers for parameter values\n        const pattern = this.template\n            .replace(/\\/{[^}?]*\\?}/g, '(\\/[^/?]+)?')\n            .replace(/{[^}]+}/g, '[^/?]+')\n            .replace(/^\\w+:\\/\\//, '');\n\n        return new RegExp(`^${pattern}$`).test(url.replace(/\\/+$/, '').split('?').shift());\n    }\n\n    /**\n     * Hydrate and return a complete URL for this route with the given parameters.\n     *\n     * @param {Object} params\n     * @return {String}\n     */\n    compile(params) {\n        if (!this.parameterSegments.length) return this.template.replace(/\\/+$/, '');\n\n        return this.template.replace(/{([^}?]+)\\??}/g, (_, segment) => {\n            // If the parameter is missing but is not optional, throw an error\n            if ([null, undefined].includes(params[segment]) && this.parameterSegments.find(({ name }) => name === segment).required) {\n                throw new Error(`Ziggy error: '${segment}' parameter is required for route '${this.name}'.`)\n            }\n\n            return encodeURIComponent(params[segment] ?? '');\n        }).replace(/\\/+$/, '');\n    }\n}\n","import { parse, stringify } from 'qs';\nimport Route from './Route';\n\n/**\n * A collection of Laravel routes. This class constitutes Ziggy's main API.\n */\nexport default class Router extends String {\n    /**\n     * @param {String} name - Route name.\n     * @param {(String|Number|Array|Object)} params - Route parameters.\n     * @param {Boolean} absolute - Whether to include the URL origin.\n     * @param {Object} config - Ziggy configuration.\n     */\n    constructor(name, params, absolute = true, config) {\n        super();\n\n        this._config = config ?? Ziggy ?? globalThis?.Ziggy;\n\n        if (name) {\n            if (!this._config.routes[name]) {\n                throw new Error(`Ziggy error: route '${name}' is not in the route list.`);\n            }\n\n            this._route = new Route(name, this._config.routes[name], { ...this._config, absolute });\n            this._params = this._parse(params);\n        }\n    }\n\n    /**\n     * Get the compiled URL string for the current route and parameters.\n     *\n     * @example\n     * // with 'posts.show' route 'posts/{post}'\n     * (new Router('posts.show', 1)).toString(); // 'https://ziggy.dev/posts/1'\n     *\n     * @return {String}\n     */\n    toString() {\n        // Get parameters that don't correspond to any route segments to append them to the query\n        const unhandled = Object.keys(this._params)\n            .filter((key) => !this._route.parameterSegments.some(({ name }) => name === key))\n            .filter((key) => key !== '_query')\n            .reduce((result, current) => ({ ...result, [current]: this._params[current] }), {});\n\n        return this._route.compile(this._params) + stringify({ ...unhandled, ...this._params['_query'] }, {\n            addQueryPrefix: true,\n            arrayFormat: 'indices',\n            encodeValuesOnly: true,\n            skipNulls: true,\n        });\n    }\n\n    /**\n     * Get the name of the route matching the current window URL, or, given a route name\n     * and parameters, check if the current window URL and parameters match that route.\n     *\n     * @example\n     * // at URL https://ziggy.dev/posts/4 with 'posts.show' route 'posts/{post}'\n     * route().current(); // 'posts.show'\n     * route().current('posts.index'); // false\n     * route().current('posts.show'); // true\n     * route().current('posts.show', { post: 1 }); // false\n     * route().current('posts.show', { post: 4 }); // true\n     *\n     * @param {String} name - Route name to check.\n     * @param {(String|Number|Array|Object)} params - Route parameters.\n     * @return {(Boolean|String)}\n     */\n    current(name, params) {\n        const url = window.location.host + window.location.pathname;\n\n        // Find the first route that matches the current URL\n        const [current, route] = Object.entries(this._config.routes).find(\n            ([_, route]) => new Route(name, route, this._config).matchesUrl(url)\n        );\n\n        // If a name wasn't passed, return the name of the current route\n        if (!name) return current;\n\n        // Test the passed name against the current route, matching some\n        // basic wildcards, e.g. passing `events.*` matches `events.show`\n        const match = new RegExp(`^${name.replace('.', '\\\\.').replace('*', '.*')}$`).test(current);\n\n        if (!params) return match;\n\n        params = this._parse(params, new Route(current, route, this._config));\n\n        // Check that all passed parameters match their values in the current window URL\n        return Object.entries(this._dehydrate(route))\n            .filter(([key]) => params.hasOwnProperty(key))\n            // Use weak equality because all values in the current window URL will be strings\n            .every(([key, value]) => params[key] == value);\n    }\n\n    /**\n     * Get all parameter values from the current window URL.\n     *\n     * @example\n     * // at URL https://tighten.ziggy.dev/posts/4?lang=en with 'posts.show' route 'posts/{post}' and domain '{team}.ziggy.dev'\n     * route().params; // { team: 'tighten', post: 4, lang: 'en' }\n     *\n     * @return {Object}\n     */\n    get params() {\n        return this._dehydrate(this._config.routes[this.current()]);\n    }\n\n    /**\n     * Check whether the given route exists.\n     *\n     * @param {String} name\n     * @return {Boolean}\n     */\n    has(name) {\n        return Object.keys(this._config.routes).includes(name);\n    }\n\n    /**\n     * Parse Laravel-style route parameters of any type into a normalized object.\n     *\n     * @example\n     * // with route parameter names 'event' and 'venue'\n     * _parse(1); // { event: 1 }\n     * _parse({ event: 2, venue: 3 }); // { event: 2, venue: 3 }\n     * _parse(['Taylor', 'Matt']); // { event: 'Taylor', venue: 'Matt' }\n     * _parse([4, { uuid: 56789, name: 'Grand Canyon' }]); // { event: 4, venue: 56789 }\n     *\n     * @param {(String|Number|Array|Object)} params - Route parameters.\n     * @param {Route} route - Route instance.\n     * @return {Object} Normalized complete route parameters.\n     */\n    _parse(params = {}, route = this._route) {\n        // If `params` is a string or integer, wrap it in an array\n        params = ['string', 'number'].includes(typeof params) ? [params] : params;\n\n        // Separate segments with and without defaults, and fill in the default values\n        const segments = route.parameterSegments.filter(({ name }) => !this._config.defaults[name]);\n\n        if (Array.isArray(params)) {\n            // If the parameters are an array they have to be in order, so we can transform them into\n            // an object by keying them with the template segment names in the order they appear\n            params = params.reduce((result, current, i) => ({ ...result, [segments[i].name]: current }), {});\n        } else if (\n            segments.length === 1\n            && !params[segments[0].name]\n            && (params.hasOwnProperty(Object.values(route.bindings)[0]) || params.hasOwnProperty('id'))\n        ) {\n            // If there is only one template segment and `params` is an object, that object is\n            // ambiguous—it could contain the parameter key and value, or it could be an object\n            // representing just the value (e.g. a model); we can inspect it to find out, and\n            // if it's just the parameter value, we can wrap it in an object with its key\n            params = { [segments[0].name]: params };\n        }\n\n        return {\n            ...this._defaults(route),\n            ...this._substituteBindings(params, route.bindings),\n        };\n    }\n\n    /**\n     * Populate default parameters for the given route.\n     *\n     * @example\n     * // with default parameters { locale: 'en', country: 'US' } and 'posts.show' route '{locale}/posts/{post}'\n     * defaults(...); // { locale: 'en' }\n     *\n     * @param {Route} route\n     * @return {Object} Default route parameters.\n     */\n    _defaults(route) {\n        return route.parameterSegments.filter(({ name }) => this._config.defaults[name])\n            .reduce((result, { name }, i) => ({ ...result, [name]: this._config.defaults[name] }), {});\n    }\n\n    /**\n     * Substitute Laravel route model bindings in the given parameters.\n     *\n     * @example\n     * _substituteBindings({ post: { id: 4, slug: 'hello-world', title: 'Hello, world!' } }, { post: 'slug' }); // { post: 'hello-world' }\n     *\n     * @param {Object} params - Route parameters.\n     * @param {Object} bindings - Route model bindings.\n     * @return {Object} Normalized route parameters.\n     */\n    _substituteBindings(params, bindings = {}) {\n        return Object.entries(params).reduce((result, [key, value]) => {\n            // If the value isn't an object, or if it's an object of explicity query\n            // parameters, there's nothing to substitute so we return it as-is\n            if (!value || typeof value !== 'object' || Array.isArray(value) || key === '_query') {\n                return { ...result, [key]: value };\n            }\n\n            if (!value.hasOwnProperty(bindings[key])) {\n                if (value.hasOwnProperty('id')) {\n                    // As a fallback, we still accept an 'id' key not explicitly registered as a binding\n                    bindings[key] = 'id';\n                } else {\n                    throw new Error(`Ziggy error: object passed as '${key}' parameter is missing route model binding key '${bindings[key]}'.`)\n                }\n            }\n\n            return { ...result, [key]: value[bindings[key]] };\n        }, {});\n    }\n\n    /**\n     * Get all parameters and their values from the current window URL, based on the given route definition.\n     *\n     * @example\n     * // at URL https://tighten.ziggy.dev/events/8/venues/chicago?zoom=true\n     * _dehydrate({ domain: '{team}.ziggy.dev', uri: 'events/{event}/venues/{venue?}' }); // { team: 'tighten', event: 8, venue: 'chicago', zoom: true }\n     *\n     * @param {Object} route - Route definition.\n     * @return {Object} Parameters.\n     */\n    _dehydrate(route) {\n        let pathname = window.location.pathname\n            // If this Laravel app is in a subdirectory, trim the subdirectory from the path\n            .replace(this._config.url.replace(/^\\w*:\\/\\/[^/]+/, ''), '')\n            .replace(/^\\/+/, '');\n\n        // Given part of a valid 'hydrated' URL containing all its parameter values,\n        // a route template, and a delimiter, extract the parameters as an object\n        // E.g. dehydrate('events/{event}/{venue}', 'events/2/chicago', '/'); // { event: 2, venue: 'chicago' }\n        const dehydrate = (hydrated, template = '', delimiter) => {\n            const [values, segments] = [hydrated, template].map(s => s.split(delimiter));\n\n            return segments.reduce((result, current, i) => {\n                // Only include template segments that are route parameters\n                // AND have a value present in the passed hydrated string\n                return /^{[^}?]+\\??}$/.test(current) && values[i]\n                    ? { ...result, [current.replace(/^{|\\??}$/g, '')]: values[i] }\n                    : result;\n            }, {});\n        }\n\n        return {\n            ...dehydrate(window.location.host, route.domain, '.'), // Domain parameters\n            ...dehydrate(pathname, route.uri, '/'), // Path parameters\n            ...parse(window.location.search?.replace(/^\\?/, '')), // Query parameters\n        };\n    }\n\n    valueOf() {\n        return this.toString();\n    }\n\n    /**\n     * @deprecated since v1.0, use `has()` instead.\n     */\n    check(name) {\n        return this.has(name);\n    }\n}\n","import Router from './Router';\n\nexport default function route(name, params, absolute, config) {\n    const router = new Router(name, params, absolute, config);\n\n    return name ? router.toString() : router;\n}\n"],"names":["has","Object","prototype","hasOwnProperty","isArray","Array","hexTable","array","i","push","toString","toUpperCase","arrayToObject","source","options","obj","plainObjects","create","length","assign","target","keys","reduce","acc","key","combine","a","b","concat","compact","value","queue","o","prop","refs","item","j","val","indexOf","pop","compacted","compactQueue","decode","str","decoder","charset","strWithoutPlus","replace","unescape","decodeURIComponent","e","encode","defaultEncoder","string","Symbol","call","String","escape","$0","parseInt","slice","out","c","charCodeAt","charAt","isBuffer","constructor","isRegExp","maybeMap","fn","mapped","merge","allowPrototypes","mergeTarget","forEach","targetItem","percentTwenties","Format","RFC1738","RFC3986","util","default","formatters","arrayPrefixGenerators","brackets","prefix","comma","indices","repeat","pushToArray","arr","valueOrArray","apply","toISO","Date","toISOString","defaultFormat","formats","defaults","addQueryPrefix","allowDots","charsetSentinel","delimiter","encoder","utils","encodeValuesOnly","format","formatter","serializeDate","date","skipNulls","strictNullHandling","stringify","object","generateArrayPrefix","filter","sort","v","join","objKeys","values","keyPrefix","arrayLimit","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","numberStr","fromCharCode","parseArrayValue","split","parseKeys","givenKey","valuesParsed","child","segment","exec","parent","index","chain","leaf","root","cleanRoot","isNaN","0","parseObject","opts","TypeError","normalizeParseOptions","tempObj","parts","Infinity","undefined","skipIndex","part","bracketEqualsPos","pos","encodedVal","parseValues","newObj","Route","name","definition","config","this","bindings","absolute","template","domain","url","match","port","uri","parameterSegments","_this$template$match","map","required","test","matchesUrl","methods","includes","pattern","RegExp","shift","compile","params","_","find","Error","encodeURIComponent","Router","super","_config","Ziggy","globalThis","routes","_route","_params","_parse","unhandled","some","result","current","[object Object]","normalizeStringifyOptions","arrayFormat","joined","window","location","host","pathname","route","entries","_dehydrate","every","segments","_defaults","_substituteBindings","dehydrate","hydrated","s","parse","search","_window$location$sear","valueOf","check","router"],"mappings":"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"}